// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GrpcTxEvent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Servicecomb.Saga.Omega.Protocol {

  /// <summary>Holder for reflection information generated from GrpcTxEvent.proto</summary>
  public static partial class GrpcTxEventReflection {

    #region Descriptor
    /// <summary>File descriptor for GrpcTxEvent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcTxEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFHcnBjVHhFdmVudC5wcm90byI8ChFHcnBjU2VydmljZUNvbmZpZxITCgtz",
            "ZXJ2aWNlTmFtZRgBIAEoCRISCgppbnN0YW5jZUlkGAIgASgJIhoKB0dycGNB",
            "Y2sSDwoHYWJvcnRlZBgBIAEoCCL3AQoLR3JwY1R4RXZlbnQSEQoJdGltZXN0",
            "YW1wGAEgASgDEhIKCmdsb2JhbFR4SWQYAiABKAkSEQoJbG9jYWxUeElkGAMg",
            "ASgJEhIKCnBhcmVudFR4SWQYBCABKAkSDAoEdHlwZRgFIAEoCRIaChJjb21w",
            "ZW5zYXRpb25NZXRob2QYBiABKAkSEAoIcGF5bG9hZHMYByABKAwSEwoLc2Vy",
            "dmljZU5hbWUYCCABKAkSEgoKaW5zdGFuY2VJZBgJIAEoCRIPCgd0aW1lb3V0",
            "GAogASgFEg8KB3JldHJpZXMYCyABKAUSEwoLcmV0cnlNZXRob2QYDCABKAki",
            "gAEKFUdycGNDb21wZW5zYXRlQ29tbWFuZBISCgpnbG9iYWxUeElkGAEgASgJ",
            "EhEKCWxvY2FsVHhJZBgCIAEoCRISCgpwYXJlbnRUeElkGAMgASgJEhoKEmNv",
            "bXBlbnNhdGlvbk1ldGhvZBgEIAEoCRIQCghwYXlsb2FkcxgFIAEoDDKoAQoO",
            "VHhFdmVudFNlcnZpY2USPQoLT25Db25uZWN0ZWQSEi5HcnBjU2VydmljZUNv",
            "bmZpZxoWLkdycGNDb21wZW5zYXRlQ29tbWFuZCIAMAESJQoJT25UeEV2ZW50",
            "EgwuR3JwY1R4RXZlbnQaCC5HcnBjQWNrIgASMAoOT25EaXNjb25uZWN0ZWQS",
            "Ei5HcnBjU2VydmljZUNvbmZpZxoILkdycGNBY2siAEJUCi5vcmcuYXBhY2hl",
            "LnNlcnZpY2Vjb21iLnNhZ2EucGFjay5jb250cmFjdC5ncnBjUAGqAh9TZXJ2",
            "aWNlY29tYi5TYWdhLk9tZWdhLlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Servicecomb.Saga.Omega.Protocol.GrpcServiceConfig), global::Servicecomb.Saga.Omega.Protocol.GrpcServiceConfig.Parser, new[]{ "ServiceName", "InstanceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Servicecomb.Saga.Omega.Protocol.GrpcAck), global::Servicecomb.Saga.Omega.Protocol.GrpcAck.Parser, new[]{ "Aborted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Servicecomb.Saga.Omega.Protocol.GrpcTxEvent), global::Servicecomb.Saga.Omega.Protocol.GrpcTxEvent.Parser, new[]{ "Timestamp", "GlobalTxId", "LocalTxId", "ParentTxId", "Type", "CompensationMethod", "Payloads", "ServiceName", "InstanceId", "Timeout", "Retries", "RetryMethod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Servicecomb.Saga.Omega.Protocol.GrpcCompensateCommand), global::Servicecomb.Saga.Omega.Protocol.GrpcCompensateCommand.Parser, new[]{ "GlobalTxId", "LocalTxId", "ParentTxId", "CompensationMethod", "Payloads" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcServiceConfig : pb::IMessage<GrpcServiceConfig> {
    private static readonly pb::MessageParser<GrpcServiceConfig> _parser = new pb::MessageParser<GrpcServiceConfig>(() => new GrpcServiceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcServiceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Servicecomb.Saga.Omega.Protocol.GrpcTxEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcServiceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcServiceConfig(GrpcServiceConfig other) : this() {
      serviceName_ = other.serviceName_;
      instanceId_ = other.instanceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcServiceConfig Clone() {
      return new GrpcServiceConfig(this);
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private string instanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcServiceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcServiceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (InstanceId != other.InstanceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcServiceConfig other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            InstanceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcAck : pb::IMessage<GrpcAck> {
    private static readonly pb::MessageParser<GrpcAck> _parser = new pb::MessageParser<GrpcAck>(() => new GrpcAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Servicecomb.Saga.Omega.Protocol.GrpcTxEventReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAck(GrpcAck other) : this() {
      aborted_ = other.aborted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAck Clone() {
      return new GrpcAck(this);
    }

    /// <summary>Field number for the "aborted" field.</summary>
    public const int AbortedFieldNumber = 1;
    private bool aborted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Aborted {
      get { return aborted_; }
      set {
        aborted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Aborted != other.Aborted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Aborted != false) hash ^= Aborted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Aborted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Aborted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Aborted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcAck other) {
      if (other == null) {
        return;
      }
      if (other.Aborted != false) {
        Aborted = other.Aborted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Aborted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcTxEvent : pb::IMessage<GrpcTxEvent> {
    private static readonly pb::MessageParser<GrpcTxEvent> _parser = new pb::MessageParser<GrpcTxEvent>(() => new GrpcTxEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcTxEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Servicecomb.Saga.Omega.Protocol.GrpcTxEventReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcTxEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcTxEvent(GrpcTxEvent other) : this() {
      timestamp_ = other.timestamp_;
      globalTxId_ = other.globalTxId_;
      localTxId_ = other.localTxId_;
      parentTxId_ = other.parentTxId_;
      type_ = other.type_;
      compensationMethod_ = other.compensationMethod_;
      payloads_ = other.payloads_;
      serviceName_ = other.serviceName_;
      instanceId_ = other.instanceId_;
      timeout_ = other.timeout_;
      retries_ = other.retries_;
      retryMethod_ = other.retryMethod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcTxEvent Clone() {
      return new GrpcTxEvent(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "globalTxId" field.</summary>
    public const int GlobalTxIdFieldNumber = 2;
    private string globalTxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalTxId {
      get { return globalTxId_; }
      set {
        globalTxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localTxId" field.</summary>
    public const int LocalTxIdFieldNumber = 3;
    private string localTxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalTxId {
      get { return localTxId_; }
      set {
        localTxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parentTxId" field.</summary>
    public const int ParentTxIdFieldNumber = 4;
    private string parentTxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentTxId {
      get { return parentTxId_; }
      set {
        parentTxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "compensationMethod" field.</summary>
    public const int CompensationMethodFieldNumber = 6;
    private string compensationMethod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompensationMethod {
      get { return compensationMethod_; }
      set {
        compensationMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payloads" field.</summary>
    public const int PayloadsFieldNumber = 7;
    private pb::ByteString payloads_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payloads {
      get { return payloads_; }
      set {
        payloads_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 8;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 9;
    private string instanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 10;
    private int timeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "retries" field.</summary>
    public const int RetriesFieldNumber = 11;
    private int retries_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Retries {
      get { return retries_; }
      set {
        retries_ = value;
      }
    }

    /// <summary>Field number for the "retryMethod" field.</summary>
    public const int RetryMethodFieldNumber = 12;
    private string retryMethod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RetryMethod {
      get { return retryMethod_; }
      set {
        retryMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcTxEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcTxEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (GlobalTxId != other.GlobalTxId) return false;
      if (LocalTxId != other.LocalTxId) return false;
      if (ParentTxId != other.ParentTxId) return false;
      if (Type != other.Type) return false;
      if (CompensationMethod != other.CompensationMethod) return false;
      if (Payloads != other.Payloads) return false;
      if (ServiceName != other.ServiceName) return false;
      if (InstanceId != other.InstanceId) return false;
      if (Timeout != other.Timeout) return false;
      if (Retries != other.Retries) return false;
      if (RetryMethod != other.RetryMethod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (GlobalTxId.Length != 0) hash ^= GlobalTxId.GetHashCode();
      if (LocalTxId.Length != 0) hash ^= LocalTxId.GetHashCode();
      if (ParentTxId.Length != 0) hash ^= ParentTxId.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (CompensationMethod.Length != 0) hash ^= CompensationMethod.GetHashCode();
      if (Payloads.Length != 0) hash ^= Payloads.GetHashCode();
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (Timeout != 0) hash ^= Timeout.GetHashCode();
      if (Retries != 0) hash ^= Retries.GetHashCode();
      if (RetryMethod.Length != 0) hash ^= RetryMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (GlobalTxId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GlobalTxId);
      }
      if (LocalTxId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LocalTxId);
      }
      if (ParentTxId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ParentTxId);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (CompensationMethod.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CompensationMethod);
      }
      if (Payloads.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Payloads);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ServiceName);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InstanceId);
      }
      if (Timeout != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Timeout);
      }
      if (Retries != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Retries);
      }
      if (RetryMethod.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RetryMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (GlobalTxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalTxId);
      }
      if (LocalTxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalTxId);
      }
      if (ParentTxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentTxId);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (CompensationMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompensationMethod);
      }
      if (Payloads.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payloads);
      }
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (Timeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeout);
      }
      if (Retries != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retries);
      }
      if (RetryMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RetryMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcTxEvent other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.GlobalTxId.Length != 0) {
        GlobalTxId = other.GlobalTxId;
      }
      if (other.LocalTxId.Length != 0) {
        LocalTxId = other.LocalTxId;
      }
      if (other.ParentTxId.Length != 0) {
        ParentTxId = other.ParentTxId;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.CompensationMethod.Length != 0) {
        CompensationMethod = other.CompensationMethod;
      }
      if (other.Payloads.Length != 0) {
        Payloads = other.Payloads;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.Timeout != 0) {
        Timeout = other.Timeout;
      }
      if (other.Retries != 0) {
        Retries = other.Retries;
      }
      if (other.RetryMethod.Length != 0) {
        RetryMethod = other.RetryMethod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            GlobalTxId = input.ReadString();
            break;
          }
          case 26: {
            LocalTxId = input.ReadString();
            break;
          }
          case 34: {
            ParentTxId = input.ReadString();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            CompensationMethod = input.ReadString();
            break;
          }
          case 58: {
            Payloads = input.ReadBytes();
            break;
          }
          case 66: {
            ServiceName = input.ReadString();
            break;
          }
          case 74: {
            InstanceId = input.ReadString();
            break;
          }
          case 80: {
            Timeout = input.ReadInt32();
            break;
          }
          case 88: {
            Retries = input.ReadInt32();
            break;
          }
          case 98: {
            RetryMethod = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCompensateCommand : pb::IMessage<GrpcCompensateCommand> {
    private static readonly pb::MessageParser<GrpcCompensateCommand> _parser = new pb::MessageParser<GrpcCompensateCommand>(() => new GrpcCompensateCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCompensateCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Servicecomb.Saga.Omega.Protocol.GrpcTxEventReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCompensateCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCompensateCommand(GrpcCompensateCommand other) : this() {
      globalTxId_ = other.globalTxId_;
      localTxId_ = other.localTxId_;
      parentTxId_ = other.parentTxId_;
      compensationMethod_ = other.compensationMethod_;
      payloads_ = other.payloads_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCompensateCommand Clone() {
      return new GrpcCompensateCommand(this);
    }

    /// <summary>Field number for the "globalTxId" field.</summary>
    public const int GlobalTxIdFieldNumber = 1;
    private string globalTxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalTxId {
      get { return globalTxId_; }
      set {
        globalTxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localTxId" field.</summary>
    public const int LocalTxIdFieldNumber = 2;
    private string localTxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalTxId {
      get { return localTxId_; }
      set {
        localTxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parentTxId" field.</summary>
    public const int ParentTxIdFieldNumber = 3;
    private string parentTxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentTxId {
      get { return parentTxId_; }
      set {
        parentTxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "compensationMethod" field.</summary>
    public const int CompensationMethodFieldNumber = 4;
    private string compensationMethod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompensationMethod {
      get { return compensationMethod_; }
      set {
        compensationMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payloads" field.</summary>
    public const int PayloadsFieldNumber = 5;
    private pb::ByteString payloads_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payloads {
      get { return payloads_; }
      set {
        payloads_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCompensateCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCompensateCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GlobalTxId != other.GlobalTxId) return false;
      if (LocalTxId != other.LocalTxId) return false;
      if (ParentTxId != other.ParentTxId) return false;
      if (CompensationMethod != other.CompensationMethod) return false;
      if (Payloads != other.Payloads) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GlobalTxId.Length != 0) hash ^= GlobalTxId.GetHashCode();
      if (LocalTxId.Length != 0) hash ^= LocalTxId.GetHashCode();
      if (ParentTxId.Length != 0) hash ^= ParentTxId.GetHashCode();
      if (CompensationMethod.Length != 0) hash ^= CompensationMethod.GetHashCode();
      if (Payloads.Length != 0) hash ^= Payloads.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GlobalTxId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GlobalTxId);
      }
      if (LocalTxId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LocalTxId);
      }
      if (ParentTxId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ParentTxId);
      }
      if (CompensationMethod.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompensationMethod);
      }
      if (Payloads.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Payloads);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GlobalTxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalTxId);
      }
      if (LocalTxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalTxId);
      }
      if (ParentTxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentTxId);
      }
      if (CompensationMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompensationMethod);
      }
      if (Payloads.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payloads);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCompensateCommand other) {
      if (other == null) {
        return;
      }
      if (other.GlobalTxId.Length != 0) {
        GlobalTxId = other.GlobalTxId;
      }
      if (other.LocalTxId.Length != 0) {
        LocalTxId = other.LocalTxId;
      }
      if (other.ParentTxId.Length != 0) {
        ParentTxId = other.ParentTxId;
      }
      if (other.CompensationMethod.Length != 0) {
        CompensationMethod = other.CompensationMethod;
      }
      if (other.Payloads.Length != 0) {
        Payloads = other.Payloads;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GlobalTxId = input.ReadString();
            break;
          }
          case 18: {
            LocalTxId = input.ReadString();
            break;
          }
          case 26: {
            ParentTxId = input.ReadString();
            break;
          }
          case 34: {
            CompensationMethod = input.ReadString();
            break;
          }
          case 42: {
            Payloads = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
